{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeEthereumUri = exports.encodeEthereumUri = exports.validateEthereumUri = exports.uriModes = undefined;\nvar _bignumber = require('bignumber.js');\nvar _bignumber2 = _interopRequireDefault(_bignumber);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Supported modes\n */\nvar uriModes = exports.uriModes = {\n  contractFunction: 'contract_function',\n  erc20Transfer: 'erc20__transfer',\n  erc20Approve: 'erc20__approve',\n  erc20TransferFrom: 'erc20__transferFrom'\n\n  /**\n   * Basic validators\n   */\n\n  /**\n   * Checks if the given string is an address\n   * from ethereum.stackexchange.com/questions/1374/how-can-i-check-if-an-ethereum-address-is-valid\n   * from https://github.com/ethereum/web3.js/blob/master/lib/utils/utils.js#L392\n   *\n   * @method isValidAddress\n   * @param {String} address the given HEX address\n   * @return {Boolean}\n   */\n};\nvar isValidAddress = function isValidAddress(address) {\n  return /^0x[0-9a-f]{40}$/i.test(address);\n};\nvar isValidEthValue = function isValidEthValue(value) {\n  var ethWeiValue = new _bignumber2.default(value);\n  return ethWeiValue.isInteger() && ethWeiValue >= 0;\n};\nvar isValidGasAmount = function isValidGasAmount(gas) {\n  return Number.isInteger(gas) && gas >= 0;\n};\nvar isValidChainId = function isValidChainId(chainId) {\n  return Number.isInteger(chainId) && chainId > 0;\n};\nvar isValidContractFunctionName = function isValidContractFunctionName(str) {\n  return str.length > 0 && /^[a-z0-9\\-_]*$/i.test(str);\n};\nvar isValidSolidityType = function isValidSolidityType(str) {\n  return str.length > 0 && /^[a-z0-9]*$/.test(str);\n};\nvar isValidFunctionArgumentName = function isValidFunctionArgumentName(str) {\n  return str.length > 0 && /^[a-z0-9\\-_]*$/i.test(str);\n};\nvar isValueDefined = function isValueDefined(val) {\n  return val !== null && typeof val !== 'undefined';\n};\nvar isValidOptionalParam = function isValidOptionalParam(param, contentCheckFunc) {\n  var isNull = param == null;\n  return isNull || contentCheckFunc(param) === true;\n};\nvar isValidRequiredParam = function isValidRequiredParam(param, contentCheckFunc) {\n  var isNotNull = param != null;\n  return isNotNull && contentCheckFunc(param) === true;\n};\nvar validateAllowedProperties = function validateAllowedProperties(testObj, allowedProperties) {\n  Object.keys(testObj).forEach(function (propertyName) {\n    if (Object.prototype.hasOwnProperty.call(testObj, propertyName)) {\n      if (allowedProperties.indexOf(propertyName) === -1) {\n        throw new Error('Not allowed property found: ' + propertyName + '! Allowed properties: ' + allowedProperties);\n      }\n    }\n  });\n};\n\n/**\n * Complex validators of URI\n */\n\n/**\n * Check correctness of function signature\n */\nvar validateFunctionSignature = function validateFunctionSignature(signature) {\n  if (isValidRequiredParam(signature.name, isValidContractFunctionName) === false) {\n    throw new Error('Invalid function name: ' + signature.name);\n  }\n  if (signature.payable !== true && signature.payable !== false) {\n    throw new Error('Invalid \"payable\" mark: ' + signature.payable);\n  }\n  if (signature.args === null || typeof signature.args === 'undefined') {\n    return;\n  }\n  if (Array.isArray(signature.args) === false) {\n    throw new Error('Function \"args\" should be an array: ' + signature.args);\n  }\n  if (signature.args.length === 0) {\n    throw new Error('Function \"args\" is an empty array. Do not use this property if function ' + 'does not have arguments');\n  }\n  signature.args.forEach(function (functionArg) {\n    validateAllowedProperties(functionArg, ['name', 'type']);\n    if (isValidRequiredParam(functionArg.name, isValidFunctionArgumentName) === false) {\n      throw new Error('Invalid \"name\" of function argument: ' + functionArg.name);\n    }\n    if (isValidRequiredParam(functionArg.type, isValidSolidityType) === false) {\n      throw new Error('Invalid \"type\" of function argument: ' + functionArg.name);\n    }\n  });\n};\n\n/**\n * Check correctness of default args for function arguments\n */\nvar validateArgsDefaults = function validateArgsDefaults(argsDefaults, functionArgs) {\n  if (argsDefaults === null || typeof argsDefaults === 'undefined') {\n    return;\n  }\n  if (Array.isArray(argsDefaults) === false) {\n    throw new Error('\"argsDefaults\" should be an array: ' + argsDefaults);\n  }\n  if (argsDefaults.length === 0) {\n    throw new Error('\"argsDefaults\" is an empty array. Do not use this property if you do not have default values');\n  }\n  if (functionArgs === null || typeof functionArgs === 'undefined') {\n    throw new Error('\"argsDefaults\" provided while function does not have arguments: ' + argsDefaults);\n  }\n  argsDefaults.forEach(function (argDefault) {\n    validateAllowedProperties(argDefault, ['name', 'value']);\n    if (isValidRequiredParam(argDefault.name, isValidFunctionArgumentName) === false) {\n      throw new Error('Invalid \"name\" of function argument in \"argsDefaults\": ' + argDefault.name);\n    }\n    if (isValueDefined(argDefault.value) === false) {\n      // we do not check arg value, out of the scope of this library\n      throw new Error('Value of the function argument is not provided: ' + argDefault.value);\n    }\n    var matchedArg = functionArgs.find(function (arg) {\n      return arg.name === argDefault.name;\n    });\n    if (matchedArg === null || typeof matchedArg === 'undefined') {\n      throw new Error('\"name\" of the function argument with default value does not fit function signature: ' + argDefault.name);\n    }\n  });\n};\nvar validateUriSchemaBasic = function validateUriSchemaBasic(data) {\n  validateAllowedProperties(data, ['to', 'from', 'value', 'gas', 'chainId']);\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n};\nvar validateUriSchemaFunction = function validateUriSchemaFunction(data) {\n  validateAllowedProperties(data, ['to', 'from', 'value', 'gas', 'mode', 'chainId', 'functionSignature', 'argsDefaults']);\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n  if (data.mode !== uriModes.contractFunction) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n  if (isValueDefined(data.functionSignature) === false) {\n    throw new Error('Property \"functionSignature\" is not defined');\n  }\n  validateFunctionSignature(data.functionSignature);\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, data.functionSignature.args);\n  }\n};\nvar validateUriSchemaERC20Transfer = function validateUriSchemaERC20Transfer(data) {\n  validateAllowedProperties(data, ['to', 'from', 'gas', 'mode', 'chainId', 'argsDefaults']);\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n  if (data.mode !== uriModes.erc20Transfer) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, [{\n      name: 'to',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint'\n    }]);\n  }\n};\nvar validateUriSchemaERC20Approve = function validateUriSchemaERC20Approve(data) {\n  validateAllowedProperties(data, ['to', 'from', 'gas', 'mode', 'chainId', 'argsDefaults']);\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n  if (data.mode !== uriModes.erc20Approve) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, [{\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint'\n    }]);\n  }\n};\nvar validateUriSchemaERC20TransferFrom = function validateUriSchemaERC20TransferFrom(data) {\n  validateAllowedProperties(data, ['to', 'from', 'gas', 'mode', 'chainId', 'argsDefaults']);\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n  if (data.mode !== uriModes.erc20TransferFrom) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, [{\n      name: 'from',\n      type: 'address'\n    }, {\n      name: 'to',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint'\n    }]);\n  }\n};\nvar validateEthereumUri = exports.validateEthereumUri = function validateEthereumUri(data) {\n  if (isValueDefined(data.mode) === false) {\n    return validateUriSchemaBasic(data);\n  } else if (data.mode === uriModes.contractFunction) {\n    return validateUriSchemaFunction(data);\n  } else if (data.mode === uriModes.erc20Transfer) {\n    return validateUriSchemaERC20Transfer(data);\n  } else if (data.mode === uriModes.erc20Approve) {\n    return validateUriSchemaERC20Approve(data);\n  } else if (data.mode === uriModes.erc20TransferFrom) {\n    return validateUriSchemaERC20TransferFrom(data);\n  }\n  throw new Error('Not supported URI mode: ' + data.mode);\n};\n\n/**\n * Encoders\n */\nvar encodeEthSend = function encodeEthSend(data) {\n  var to = data.to,\n    from = data.from,\n    value = data.value,\n    gas = data.gas,\n    chainId = data.chainId;\n  var params = {\n    from: isValueDefined(from) ? from : null,\n    value: isValueDefined(value) ? new _bignumber2.default(value).toString(10) : null,\n    gas: isValueDefined(gas) ? gas : null,\n    chainId: isValueDefined(chainId) && isValidChainId(chainId) ? chainId : null\n  };\n  var paramsStr = Object.keys(params).map(function (param) {\n    return params[param] ? param + '=' + params[param] : null;\n  }).filter(function (item) {\n    return !!item;\n  }).join('&');\n  return 'ethereum:' + to + '?' + paramsStr;\n};\nvar encodeEthereumUri = exports.encodeEthereumUri = function encodeEthereumUri(data) {\n  validateEthereumUri(data); // throws if data has wrong format\n\n  if (isValueDefined(data.mode) === false) {\n    return encodeEthSend(data);\n  }\n  return JSON.stringify(data);\n};\n\n/**\n * Decoders\n */\nvar decodeEthSend = function decodeEthSend(encodedStr) {\n  var addressBlockParams = {\n    gas: {\n      convert: function convert(value) {\n        return parseInt(value, 10);\n      }\n    },\n    value: {\n      convert: function convert(value) {\n        return new _bignumber2.default(value).toString(10);\n      }\n    },\n    from: {\n      convert: function convert(value) {\n        return value;\n      }\n    },\n    chainId: {\n      convert: function convert(value) {\n        return parseInt(value, 10);\n      }\n    }\n  };\n  var result = {};\n  if (!encodedStr || encodedStr.substr(0, 9) !== 'ethereum:') {\n    return false;\n  }\n  if (encodedStr.length >= 51 && isValidAddress(encodedStr.substr(9, 42))) {\n    result.to = encodedStr.substr(9, 42);\n  }\n  if (encodedStr.length > 51) {\n    var uriSegments = encodedStr.substr(51).split(/\\?|&/);\n    uriSegments.shift();\n    uriSegments.forEach(function (segment) {\n      var parts = segment.split('=');\n      if (Object.keys(addressBlockParams).indexOf(parts[0]) > -1) {\n        result[parts[0]] = addressBlockParams[parts[0]].convert(parts[1]);\n      }\n    });\n  }\n  return result;\n};\nvar decodeEthereumUri = exports.decodeEthereumUri = function decodeEthereumUri(encodedStr) {\n  var data = void 0;\n  try {\n    data = JSON.parse(encodedStr);\n  } catch (e) {\n    // this is not a JSON, try to parse legacy format ETH send\n  }\n  if (typeof data === 'undefined') {\n    data = decodeEthSend(encodedStr);\n  }\n  validateEthereumUri(data); // throws if data has wrong format\n\n  return data;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","decodeEthereumUri","encodeEthereumUri","validateEthereumUri","uriModes","undefined","_bignumber","require","_bignumber2","_interopRequireDefault","obj","__esModule","default","contractFunction","erc20Transfer","erc20Approve","erc20TransferFrom","isValidAddress","address","test","isValidEthValue","ethWeiValue","isInteger","isValidGasAmount","gas","Number","isValidChainId","chainId","isValidContractFunctionName","str","length","isValidSolidityType","isValidFunctionArgumentName","isValueDefined","val","isValidOptionalParam","param","contentCheckFunc","isNull","isValidRequiredParam","isNotNull","validateAllowedProperties","testObj","allowedProperties","keys","forEach","propertyName","prototype","hasOwnProperty","call","indexOf","Error","validateFunctionSignature","signature","name","payable","args","Array","isArray","functionArg","type","validateArgsDefaults","argsDefaults","functionArgs","argDefault","matchedArg","find","arg","validateUriSchemaBasic","data","to","from","validateUriSchemaFunction","mode","functionSignature","validateUriSchemaERC20Transfer","validateUriSchemaERC20Approve","validateUriSchemaERC20TransferFrom","encodeEthSend","params","toString","paramsStr","map","filter","item","join","JSON","stringify","decodeEthSend","encodedStr","addressBlockParams","convert","parseInt","result","substr","uriSegments","split","shift","segment","parts","parse","e"],"sources":["C:/Users/alero/node_modules/ethereum-qr-code/lib/uriProcessor.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeEthereumUri = exports.encodeEthereumUri = exports.validateEthereumUri = exports.uriModes = undefined;\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Supported modes\n */\nvar uriModes = exports.uriModes = {\n  contractFunction: 'contract_function',\n  erc20Transfer: 'erc20__transfer',\n  erc20Approve: 'erc20__approve',\n  erc20TransferFrom: 'erc20__transferFrom'\n\n  /**\n   * Basic validators\n   */\n\n  /**\n   * Checks if the given string is an address\n   * from ethereum.stackexchange.com/questions/1374/how-can-i-check-if-an-ethereum-address-is-valid\n   * from https://github.com/ethereum/web3.js/blob/master/lib/utils/utils.js#L392\n   *\n   * @method isValidAddress\n   * @param {String} address the given HEX address\n   * @return {Boolean}\n   */\n};var isValidAddress = function isValidAddress(address) {\n  return (/^0x[0-9a-f]{40}$/i.test(address)\n  );\n};\n\nvar isValidEthValue = function isValidEthValue(value) {\n  var ethWeiValue = new _bignumber2.default(value);\n\n  return ethWeiValue.isInteger() && ethWeiValue >= 0;\n};\n\nvar isValidGasAmount = function isValidGasAmount(gas) {\n  return Number.isInteger(gas) && gas >= 0;\n};\nvar isValidChainId = function isValidChainId(chainId) {\n  return Number.isInteger(chainId) && chainId > 0;\n};\n\nvar isValidContractFunctionName = function isValidContractFunctionName(str) {\n  return str.length > 0 && /^[a-z0-9\\-_]*$/i.test(str);\n};\nvar isValidSolidityType = function isValidSolidityType(str) {\n  return str.length > 0 && /^[a-z0-9]*$/.test(str);\n};\nvar isValidFunctionArgumentName = function isValidFunctionArgumentName(str) {\n  return str.length > 0 && /^[a-z0-9\\-_]*$/i.test(str);\n};\n\nvar isValueDefined = function isValueDefined(val) {\n  return val !== null && typeof val !== 'undefined';\n};\n\nvar isValidOptionalParam = function isValidOptionalParam(param, contentCheckFunc) {\n  var isNull = param == null;\n\n  return isNull || contentCheckFunc(param) === true;\n};\n\nvar isValidRequiredParam = function isValidRequiredParam(param, contentCheckFunc) {\n  var isNotNull = param != null;\n\n  return isNotNull && contentCheckFunc(param) === true;\n};\n\nvar validateAllowedProperties = function validateAllowedProperties(testObj, allowedProperties) {\n  Object.keys(testObj).forEach(function (propertyName) {\n    if (Object.prototype.hasOwnProperty.call(testObj, propertyName)) {\n      if (allowedProperties.indexOf(propertyName) === -1) {\n        throw new Error('Not allowed property found: ' + propertyName + '! Allowed properties: ' + allowedProperties);\n      }\n    }\n  });\n};\n\n/**\n * Complex validators of URI\n */\n\n/**\n * Check correctness of function signature\n */\nvar validateFunctionSignature = function validateFunctionSignature(signature) {\n  if (isValidRequiredParam(signature.name, isValidContractFunctionName) === false) {\n    throw new Error('Invalid function name: ' + signature.name);\n  }\n\n  if (signature.payable !== true && signature.payable !== false) {\n    throw new Error('Invalid \"payable\" mark: ' + signature.payable);\n  }\n\n  if (signature.args === null || typeof signature.args === 'undefined') {\n    return;\n  }\n\n  if (Array.isArray(signature.args) === false) {\n    throw new Error('Function \"args\" should be an array: ' + signature.args);\n  }\n\n  if (signature.args.length === 0) {\n    throw new Error('Function \"args\" is an empty array. Do not use this property if function ' + 'does not have arguments');\n  }\n\n  signature.args.forEach(function (functionArg) {\n    validateAllowedProperties(functionArg, ['name', 'type']);\n\n    if (isValidRequiredParam(functionArg.name, isValidFunctionArgumentName) === false) {\n      throw new Error('Invalid \"name\" of function argument: ' + functionArg.name);\n    }\n\n    if (isValidRequiredParam(functionArg.type, isValidSolidityType) === false) {\n      throw new Error('Invalid \"type\" of function argument: ' + functionArg.name);\n    }\n  });\n};\n\n/**\n * Check correctness of default args for function arguments\n */\nvar validateArgsDefaults = function validateArgsDefaults(argsDefaults, functionArgs) {\n  if (argsDefaults === null || typeof argsDefaults === 'undefined') {\n    return;\n  }\n\n  if (Array.isArray(argsDefaults) === false) {\n    throw new Error('\"argsDefaults\" should be an array: ' + argsDefaults);\n  }\n\n  if (argsDefaults.length === 0) {\n    throw new Error('\"argsDefaults\" is an empty array. Do not use this property if you do not have default values');\n  }\n\n  if (functionArgs === null || typeof functionArgs === 'undefined') {\n    throw new Error('\"argsDefaults\" provided while function does not have arguments: ' + argsDefaults);\n  }\n\n  argsDefaults.forEach(function (argDefault) {\n    validateAllowedProperties(argDefault, ['name', 'value']);\n\n    if (isValidRequiredParam(argDefault.name, isValidFunctionArgumentName) === false) {\n      throw new Error('Invalid \"name\" of function argument in \"argsDefaults\": ' + argDefault.name);\n    }\n\n    if (isValueDefined(argDefault.value) === false) {\n      // we do not check arg value, out of the scope of this library\n      throw new Error('Value of the function argument is not provided: ' + argDefault.value);\n    }\n\n    var matchedArg = functionArgs.find(function (arg) {\n      return arg.name === argDefault.name;\n    });\n\n    if (matchedArg === null || typeof matchedArg === 'undefined') {\n      throw new Error('\"name\" of the function argument with default value does not fit function signature: ' + argDefault.name);\n    }\n  });\n};\n\nvar validateUriSchemaBasic = function validateUriSchemaBasic(data) {\n  validateAllowedProperties(data, ['to', 'from', 'value', 'gas', 'chainId']);\n\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n};\n\nvar validateUriSchemaFunction = function validateUriSchemaFunction(data) {\n  validateAllowedProperties(data, ['to', 'from', 'value', 'gas', 'mode', 'chainId', 'functionSignature', 'argsDefaults']);\n\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n\n  if (data.mode !== uriModes.contractFunction) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n\n  if (isValueDefined(data.functionSignature) === false) {\n    throw new Error('Property \"functionSignature\" is not defined');\n  }\n\n  validateFunctionSignature(data.functionSignature);\n\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, data.functionSignature.args);\n  }\n};\n\nvar validateUriSchemaERC20Transfer = function validateUriSchemaERC20Transfer(data) {\n  validateAllowedProperties(data, ['to', 'from', 'gas', 'mode', 'chainId', 'argsDefaults']);\n\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n\n  if (data.mode !== uriModes.erc20Transfer) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, [{ name: 'to', type: 'address' }, { name: 'value', type: 'uint' }]);\n  }\n};\n\nvar validateUriSchemaERC20Approve = function validateUriSchemaERC20Approve(data) {\n  validateAllowedProperties(data, ['to', 'from', 'gas', 'mode', 'chainId', 'argsDefaults']);\n\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n\n  if (data.mode !== uriModes.erc20Approve) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, [{ name: 'spender', type: 'address' }, { name: 'value', type: 'uint' }]);\n  }\n};\n\nvar validateUriSchemaERC20TransferFrom = function validateUriSchemaERC20TransferFrom(data) {\n  validateAllowedProperties(data, ['to', 'from', 'gas', 'mode', 'chainId', 'argsDefaults']);\n\n  if (isValidRequiredParam(data.to, isValidAddress) === false) {\n    throw new Error('Property \"to\" is not an valid Ethereum address: ' + data.to);\n  }\n\n  if (isValidOptionalParam(data.from, isValidAddress) === false) {\n    throw new Error('Property \"from\" is not an valid Ethereum address: ' + data.from);\n  }\n\n  if (isValidOptionalParam(data.value, isValidEthValue) === false) {\n    throw new Error('Property \"value\" is not an valid Ethereum amount: ' + data.value);\n  }\n\n  if (isValidOptionalParam(data.gas, isValidGasAmount) === false) {\n    throw new Error('Property \"gas\" is not an valid gas amount: ' + data.gas);\n  }\n\n  if (isValidOptionalParam(data.chainId, isValidChainId) === false) {\n    throw new Error('Property \"chainId\" is not an valid Ethereum chainId: ' + data.chainId);\n  }\n\n  if (data.mode !== uriModes.erc20TransferFrom) {\n    throw new Error('Chosen URI mode is not supported: ' + data.mode);\n  }\n\n  if (isValueDefined(data.argsDefaults)) {\n    validateArgsDefaults(data.argsDefaults, [{ name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'value', type: 'uint' }]);\n  }\n};\n\nvar validateEthereumUri = exports.validateEthereumUri = function validateEthereumUri(data) {\n  if (isValueDefined(data.mode) === false) {\n    return validateUriSchemaBasic(data);\n  } else if (data.mode === uriModes.contractFunction) {\n    return validateUriSchemaFunction(data);\n  } else if (data.mode === uriModes.erc20Transfer) {\n    return validateUriSchemaERC20Transfer(data);\n  } else if (data.mode === uriModes.erc20Approve) {\n    return validateUriSchemaERC20Approve(data);\n  } else if (data.mode === uriModes.erc20TransferFrom) {\n    return validateUriSchemaERC20TransferFrom(data);\n  }\n\n  throw new Error('Not supported URI mode: ' + data.mode);\n};\n\n/**\n * Encoders\n */\nvar encodeEthSend = function encodeEthSend(data) {\n  var to = data.to,\n      from = data.from,\n      value = data.value,\n      gas = data.gas,\n      chainId = data.chainId;\n\n\n  var params = {\n    from: isValueDefined(from) ? from : null,\n    value: isValueDefined(value) ? new _bignumber2.default(value).toString(10) : null,\n    gas: isValueDefined(gas) ? gas : null,\n    chainId: isValueDefined(chainId) && isValidChainId(chainId) ? chainId : null\n  };\n\n  var paramsStr = Object.keys(params).map(function (param) {\n    return params[param] ? param + '=' + params[param] : null;\n  }).filter(function (item) {\n    return !!item;\n  }).join('&');\n\n  return 'ethereum:' + to + '?' + paramsStr;\n};\n\nvar encodeEthereumUri = exports.encodeEthereumUri = function encodeEthereumUri(data) {\n  validateEthereumUri(data); // throws if data has wrong format\n\n  if (isValueDefined(data.mode) === false) {\n    return encodeEthSend(data);\n  }\n\n  return JSON.stringify(data);\n};\n\n/**\n * Decoders\n */\nvar decodeEthSend = function decodeEthSend(encodedStr) {\n  var addressBlockParams = {\n    gas: {\n      convert: function convert(value) {\n        return parseInt(value, 10);\n      }\n    },\n    value: {\n      convert: function convert(value) {\n        return new _bignumber2.default(value).toString(10);\n      }\n    },\n    from: {\n      convert: function convert(value) {\n        return value;\n      }\n    },\n    chainId: {\n      convert: function convert(value) {\n        return parseInt(value, 10);\n      }\n    }\n  };\n\n  var result = {};\n\n  if (!encodedStr || encodedStr.substr(0, 9) !== 'ethereum:') {\n    return false;\n  }\n\n  if (encodedStr.length >= 51 && isValidAddress(encodedStr.substr(9, 42))) {\n    result.to = encodedStr.substr(9, 42);\n  }\n\n  if (encodedStr.length > 51) {\n    var uriSegments = encodedStr.substr(51).split(/\\?|&/);\n    uriSegments.shift();\n\n    uriSegments.forEach(function (segment) {\n      var parts = segment.split('=');\n\n      if (Object.keys(addressBlockParams).indexOf(parts[0]) > -1) {\n        result[parts[0]] = addressBlockParams[parts[0]].convert(parts[1]);\n      }\n    });\n  }\n\n  return result;\n};\n\nvar decodeEthereumUri = exports.decodeEthereumUri = function decodeEthereumUri(encodedStr) {\n  var data = void 0;\n\n  try {\n    data = JSON.parse(encodedStr);\n  } catch (e) {\n    // this is not a JSON, try to parse legacy format ETH send\n  }\n\n  if (typeof data === 'undefined') {\n    data = decodeEthSend(encodedStr);\n  }\n\n  validateEthereumUri(data); // throws if data has wrong format\n\n  return data;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar isArray = require('isarray');\nvar K_MAX_LENGTH = 0x7fffffff;\nfunction Buffer(arg, offset, length) {\n  if (typeof arg === 'number') {\n    return allocUnsafe(arg);\n  }\n  return from(arg, offset, length);\n}\nBuffer.prototype.__proto__ = Uint8Array.prototype;\nBuffer.__proto__ = Uint8Array;\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  });\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer(length) {\n  var buf = new Uint8Array(length);\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\nfunction allocUnsafe(size) {\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\nfunction fromString(string) {\n  var length = byteLength(string) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n  var buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(0);\n      }\n      return fromArrayLike(obj);\n    }\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction byteLength(string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n  var len = string.length;\n  if (len === 0) return 0;\n  return utf8ToBytes(string).length;\n}\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction from(value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(value, offset, length);\n  }\n  if (typeof value === 'string') {\n    return fromString(value, offset);\n  }\n  return fromObject(value);\n}\nBuffer.prototype.write = function write(string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n    } else {\n      length = undefined;\n    }\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  return utf8Write(this, string, offset, length);\n};\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype;\n  return newBuf;\n};\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  var i;\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n  return len;\n};\nBuffer.prototype.fill = function fill(val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : new Buffer(val);\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return createBuffer(null, 0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  var buffer = allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer;\n};\nBuffer.byteLength = byteLength;\nBuffer.prototype._isBuffer = true;\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\nmodule.exports = Buffer;","map":{"version":3,"names":["isArray","require","K_MAX_LENGTH","Buffer","arg","offset","length","allocUnsafe","from","prototype","__proto__","Uint8Array","Symbol","species","Object","defineProperty","value","configurable","enumerable","writable","checked","RangeError","toString","isnan","val","createBuffer","buf","size","fromString","string","byteLength","actual","write","slice","fromArrayLike","array","i","fromArrayBuffer","byteOffset","undefined","fromObject","obj","isBuffer","len","copy","ArrayBuffer","buffer","type","Array","data","TypeError","utf8ToBytes","units","Infinity","codePoint","leadSurrogate","bytes","charCodeAt","push","Error","isView","blitBuffer","src","dst","utf8Write","isFinite","remaining","start","end","newBuf","subarray","target","targetStart","set","call","fill","code","concat","list","pos","_isBuffer","b","module","exports"],"sources":["C:/Users/alero/OneDrive/Documentos/GitHub/proyecto/parte C/node_modules/qrcode/lib/utils/typedarray-buffer.js"],"sourcesContent":["/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nvar K_MAX_LENGTH = 0x7fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (typeof arg === 'number') {\n    return allocUnsafe(arg)\n  }\n\n  return from(arg, offset, length)\n}\n\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (length) {\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction allocUnsafe (size) {\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\nfunction fromString (string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, offset)\n  }\n\n  return fromObject(value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports = Buffer\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
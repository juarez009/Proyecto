{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alero\\\\OneDrive\\\\Documentos\\\\GitHub\\\\proyecto\\\\parte C\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Barra from \"./components/navbar/navbar\";\nimport Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Smart from \"./components/smartContract/Smart.json\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Products from \"./components/productos/productos\";\nimport Ventas from \"./components/ventas/Ventas\";\nimport Home from \"./components/Home/home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [Metamask, setMetamask] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setbalance] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [balanceEth, setBalanceEth] = useState(null);\n  const [contract, setContract] = useState(null);\n  // Function to connect the wallet\n  const conectarWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const web3Instance = new Web3(window.ethereum);\n        setWeb3(web3Instance);\n        setMetamask(true);\n        const contractInstance = new web3Instance.eth.Contract(Smart, Smart && \"0x6370859B30AA0e92bc65bF97EF27b2B130477d68\");\n        setContract(contractInstance);\n        console.log(\"contractInstance ==> Conected\", contractInstance);\n        // Guardar la información de la cuenta en localStorage\n        localStorage.setItem(\"walletConnected\", \"true\");\n      } catch (error) {\n        console.error(\"No se pudo conectar a la wallet, error\");\n      }\n    } else {\n      setMetamask(false);\n    }\n  };\n  useEffect(() => {\n    async function checkWalletConnection() {\n      if (typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\"\n        });\n        const isConnected = accounts.length > 0;\n        if (isConnected) {\n          const web3Instance = new Web3(window.ethereum);\n          setWeb3(web3Instance);\n          const contractInstance = new web3Instance.eth.Contract(Smart, Smart && \"0xcB4C0E5C06f752df50183cbdc6F97a82AE54531d\");\n          setContract(contractInstance);\n          console.log(\"contractInstance ==> Conected\", contractInstance);\n          setAccounts(accounts[0]); // Establecer la dirección de la cuenta\n          setMetamask(true);\n          updateBalance(web3Instance, accounts[0]); // Actualizar el balance\n        }\n      }\n    }\n\n    checkWalletConnection();\n  }, []);\n  const updateBalance = async (web3Instance, account) => {\n    const balanceWei = await web3Instance.eth.getBalance(account);\n    const balanceEth = web3Instance.utils.fromWei(balanceWei, \"ether\");\n    setBalanceEth(balanceEth);\n  };\n  const handleConnectWallet = async () => {\n    if (!Metamask) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const web3Instance = new Web3(window.ethereum);\n        const accounts = await web3Instance.eth.getAccounts();\n        setWeb3(web3Instance);\n        setAccounts(accounts[0]);\n        setMetamask(true);\n        updateBalance(web3Instance, accounts[0]);\n      } catch (error) {\n        console.error(\"No se pudo conectar a la wallet, error\");\n      }\n    } else {\n      // Desconectar la billetera\n      setMetamask(false);\n      setAccounts(null);\n      setBalanceEth(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/productos\",\n          element: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ventas\",\n          element: /*#__PURE__*/_jsxDEV(Ventas, {\n            contrato: contract,\n            Accounts: accounts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/wallet\",\n          element: /*#__PURE__*/_jsxDEV(Barra, {\n            conectarWallet: handleConnectWallet,\n            Accounts: accounts,\n            Balance: balanceEth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/inicio\",\n          element: Metamask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: \"Por favor instale una billetera o conecte su billetera perteneciente a su cuenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light \",\n              onClick: handleConnectWallet,\n              children: \"Conectar Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CgeLIpQNKCR2ufNFtoNrjM49K48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Barra","Web3","React","useState","useEffect","BrowserRouter","Router","Route","Routes","Smart","Login","Register","Products","Ventas","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","Metamask","setMetamask","web3","setWeb3","balance","setbalance","accounts","setAccounts","balanceEth","setBalanceEth","contract","setContract","conectarWallet","window","ethereum","request","method","web3Instance","contractInstance","eth","Contract","console","log","localStorage","setItem","error","checkWalletConnection","isConnected","length","updateBalance","account","balanceWei","getBalance","utils","fromWei","handleConnectWallet","getAccounts","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","contrato","Accounts","Balance","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alero/OneDrive/Documentos/GitHub/proyecto/parte C/src/App.js"],"sourcesContent":["import Barra from \"./components/navbar/navbar\";\r\nimport Web3 from \"web3\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Smart from \"./components/smartContract/Smart.json\"\r\nimport Login from \"./components/Login/Login\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Products from \"./components/productos/productos\";\r\nimport Ventas from \"./components/ventas/Ventas\";\r\nimport Home from \"./components/Home/home\";\r\n\r\nfunction App() {\r\n  const [Metamask, setMetamask] = useState(false);\r\n  const [web3, setWeb3] = useState(null);\r\n  const [balance, setbalance] = useState(null);\r\n  const [accounts, setAccounts] = useState(null);\r\n  const [balanceEth, setBalanceEth] = useState(null);\r\n  const [contract,setContract]=useState(null);\r\n  // Function to connect the wallet\r\n  const conectarWallet = async () => {\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n        try {\r\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n          const web3Instance = new Web3(window.ethereum);\r\n          setWeb3(web3Instance);\r\n          setMetamask(true);\r\n          const contractInstance=new web3Instance.eth.Contract(Smart,Smart &&\"0x6370859B30AA0e92bc65bF97EF27b2B130477d68\")\r\n        setContract(contractInstance);\r\n        console.log(\"contractInstance ==> Conected\", contractInstance);\r\n          // Guardar la información de la cuenta en localStorage\r\n          localStorage.setItem(\"walletConnected\", \"true\");\r\n        } catch (error) {\r\n          console.error(\"No se pudo conectar a la wallet, error\");\r\n        }\r\n      } else {\r\n        setMetamask(false);\r\n      }}\r\n      useEffect(() => {\r\n        async function checkWalletConnection() {\r\n          if (typeof window.ethereum !== \"undefined\") {\r\n            const accounts = await window.ethereum.request({\r\n              method: \"eth_accounts\",\r\n            });\r\n            const isConnected = accounts.length > 0;\r\n    \r\n            if (isConnected) {\r\n              const web3Instance = new Web3(window.ethereum);\r\n              setWeb3(web3Instance);\r\n              const contractInstance=new web3Instance.eth.Contract(Smart,Smart &&\"0xcB4C0E5C06f752df50183cbdc6F97a82AE54531d\")\r\n        setContract(contractInstance);\r\n        console.log(\"contractInstance ==> Conected\", contractInstance);\r\n              setAccounts(accounts[0]); // Establecer la dirección de la cuenta\r\n              setMetamask(true);\r\n              updateBalance(web3Instance, accounts[0]); // Actualizar el balance\r\n            }\r\n          }\r\n        }\r\n        \r\n        checkWalletConnection();\r\n      }, []);\r\n    \r\n      const updateBalance = async (web3Instance, account) => {\r\n        const balanceWei = await web3Instance.eth.getBalance(account);\r\n        const balanceEth = web3Instance.utils.fromWei(balanceWei, \"ether\");\r\n        setBalanceEth(balanceEth);\r\n      };\r\n    \r\n      const handleConnectWallet = async () => {\r\n        if (!Metamask) {\r\n          try {\r\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n            const web3Instance = new Web3(window.ethereum);\r\n            const accounts = await web3Instance.eth.getAccounts();\r\n            setWeb3(web3Instance);\r\n            setAccounts(accounts[0]);\r\n            setMetamask(true);\r\n            updateBalance(web3Instance, accounts[0]);\r\n          } catch (error) {\r\n            console.error(\"No se pudo conectar a la wallet, error\");\r\n          }\r\n        } else {\r\n          // Desconectar la billetera\r\n          setMetamask(false);\r\n          setAccounts(null);\r\n          setBalanceEth(null);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Login />} />\r\n          <Route path=\"/productos\" element={<Products />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/ventas\" element={<Ventas contrato={contract} Accounts={accounts}/>}/>\r\n          <Route path=\"/wallet\" element={<Barra\r\n                    conectarWallet={handleConnectWallet}\r\n                    Accounts={accounts}\r\n                    Balance={balanceEth}\r\n                  ></Barra>}/>\r\n          <Route\r\n            path=\"/inicio\"\r\n            element={\r\n              Metamask ? (\r\n                <>\r\n                  <Home></Home>\r\n                </>\r\n              ) : (\r\n                <div className=\"text-center\">\r\n                  <h3 className=\"text-center\">\r\n                  Por favor instale una billetera o conecte su billetera perteneciente a su cuenta\r\n                </h3>\r\n                <button className=\"btn btn-light \" onClick={handleConnectWallet}>Conectar Wallet</button>\r\n                </div>\r\n                \r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var Buffer = require('../utils/buffer');\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0');\n  }\n  this.size = size;\n  this.data = new Buffer(size * size);\n  this.data.fill(0);\n  this.reservedBit = new Buffer(size * size);\n  this.reservedBit.fill(0);\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col;\n  this.data[index] = value;\n  if (reserved) this.reservedBit[index] = true;\n};\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col];\n};\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value;\n};\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col];\n};\nmodule.exports = BitMatrix;","map":{"version":3,"names":["Buffer","require","BitMatrix","size","Error","data","fill","reservedBit","prototype","set","row","col","value","reserved","index","get","xor","isReserved","module","exports"],"sources":["C:/Users/alero/OneDrive/Documentos/GitHub/proyecto/parte C/node_modules/qrcode/lib/core/bit-matrix.js"],"sourcesContent":["var Buffer = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Buffer(size * size)\n  this.data.fill(0)\n  this.reservedBit = new Buffer(size * size)\n  this.reservedBit.fill(0)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAAEC,IAAI,EAAE;EACxB,IAAI,CAACA,IAAI,IAAIA,IAAI,GAAG,CAAC,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EAEA,IAAI,CAACD,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACE,IAAI,GAAG,IAAIL,MAAM,CAACG,IAAI,GAAGA,IAAI,CAAC;EACnC,IAAI,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EACjB,IAAI,CAACC,WAAW,GAAG,IAAIP,MAAM,CAACG,IAAI,GAAGA,IAAI,CAAC;EAC1C,IAAI,CAACI,WAAW,CAACD,IAAI,CAAC,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,SAAS,CAACM,SAAS,CAACC,GAAG,GAAG,UAAUC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC7D,IAAIC,KAAK,GAAGJ,GAAG,GAAG,IAAI,CAACP,IAAI,GAAGQ,GAAG;EACjC,IAAI,CAACN,IAAI,CAACS,KAAK,CAAC,GAAGF,KAAK;EACxB,IAAIC,QAAQ,EAAE,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC,GAAG,IAAI;AAC9C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,SAAS,CAACM,SAAS,CAACO,GAAG,GAAG,UAAUL,GAAG,EAAEC,GAAG,EAAE;EAC5C,OAAO,IAAI,CAACN,IAAI,CAACK,GAAG,GAAG,IAAI,CAACP,IAAI,GAAGQ,GAAG,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,SAAS,CAACM,SAAS,CAACQ,GAAG,GAAG,UAAUN,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACnD,IAAI,CAACP,IAAI,CAACK,GAAG,GAAG,IAAI,CAACP,IAAI,GAAGQ,GAAG,CAAC,IAAIC,KAAK;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,SAAS,CAACM,SAAS,CAACS,UAAU,GAAG,UAAUP,GAAG,EAAEC,GAAG,EAAE;EACnD,OAAO,IAAI,CAACJ,WAAW,CAACG,GAAG,GAAG,IAAI,CAACP,IAAI,GAAGQ,GAAG,CAAC;AAChD,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAGjB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alero\\\\OneDrive\\\\Documentos\\\\GitHub\\\\proyecto\\\\parte C\\\\src\\\\components\\\\ventas\\\\EthereumQRCode.js\";\n// src/components/EthereumQRCode.js\nimport React from 'react';\nimport QRCode from 'react-qr-code';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EthereumQRCode = ({\n  address,\n  amount\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Ethereum Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Amount to Receive: \", amount, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n      value: `ethereum:${address}?value=${amount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = EthereumQRCode;\nexport default EthereumQRCode;\nvar _c;\n$RefreshReg$(_c, \"EthereumQRCode\");","map":{"version":3,"names":["React","QRCode","jsxDEV","_jsxDEV","EthereumQRCode","address","amount","children","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["C:/Users/alero/OneDrive/Documentos/GitHub/proyecto/parte C/src/components/ventas/EthereumQRCode.js"],"sourcesContent":["// src/components/EthereumQRCode.js\r\nimport React from 'react';\r\nimport QRCode from 'react-qr-code';\r\n\r\nconst EthereumQRCode = ({ address, amount }) => {\r\n  return (\r\n    <div>\r\n      <h2>Your Ethereum Address</h2>\r\n      <p>{address}</p>\r\n      <h2>Amount to Receive: {amount} ETH</h2>\r\n      <QRCode value={`ethereum:${address}?value=${amount}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EthereumQRCode;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC9C,oBACEH,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BR,OAAA;MAAAI,QAAA,EAAIF;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBR,OAAA;MAAAI,QAAA,GAAI,qBAAmB,EAACD,MAAM,EAAC,MAAI;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCR,OAAA,CAACF,MAAM;MAACW,KAAK,EAAG,YAAWP,OAAQ,UAASC,MAAO;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACE,EAAA,GATIT,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alero\\\\OneDrive\\\\Documentos\\\\GitHub\\\\proyecto\\\\parte C\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Barra from \"./components/navbar/navbar\";\nimport Web3 from \"web3\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Products from \"./components/productos/productos\";\nimport Ventas from \"./components/ventas/Ventas\";\nimport Home from \"./components/Home/home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [Metamask, setMetamask] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [balance, setbalance] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [balanceEth, setBalanceEth] = useState(null);\n\n  // Function to connect the wallet\n  const conectarWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const web3Instance = new Web3(window.ethereum);\n        setWeb3(web3Instance);\n        setMetamask(true);\n        // Guardar la información de la cuenta en localStorage\n        localStorage.setItem(\"walletConnected\", \"true\");\n      } catch (error) {\n        console.error(\"No se pudo conectar a la wallet, error\");\n      }\n    } else {\n      setMetamask(false);\n    }\n  };\n  useEffect(() => {\n    async function checkWalletConnection() {\n      if (typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\"\n        });\n        const isConnected = accounts.length > 0;\n        if (isConnected) {\n          const web3Instance = new Web3(window.ethereum);\n          setWeb3(web3Instance);\n          setAccounts(accounts[0]); // Establecer la dirección de la cuenta\n          setMetamask(true);\n          updateBalance(web3Instance, accounts[0]); // Actualizar el balance\n        }\n      }\n    }\n\n    checkWalletConnection();\n  }, []);\n  const updateBalance = async (web3Instance, account) => {\n    const balanceWei = await web3Instance.eth.getBalance(account);\n    const balanceEth = web3Instance.utils.fromWei(balanceWei, \"ether\");\n    setBalanceEth(balanceEth);\n  };\n  const handleConnectWallet = async () => {\n    if (!Metamask) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const web3Instance = new Web3(window.ethereum);\n        const accounts = await web3Instance.eth.getAccounts();\n        setWeb3(web3Instance);\n        setAccounts(accounts[0]);\n        setMetamask(true);\n        updateBalance(web3Instance, accounts[0]);\n      } catch (error) {\n        console.error(\"No se pudo conectar a la wallet, error\");\n      }\n    } else {\n      // Desconectar la billetera\n      setMetamask(false);\n      setAccounts(null);\n      setBalanceEth(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/productos\",\n          element: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ventas\",\n          element: /*#__PURE__*/_jsxDEV(Ventas, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/wallet\",\n          element: /*#__PURE__*/_jsxDEV(Barra, {\n            conectarWallet: handleConnectWallet,\n            Accounts: accounts,\n            Balance: balanceEth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/inicio\",\n          element: Metamask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: \"Por favor instale una billetera o conecte su billetera perteneciente a su cuenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light \",\n              onClick: handleConnectWallet,\n              children: \"Conectar Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uFd646w2E7ouGYGiK9wzEvs09Ec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Barra","Web3","React","useState","useEffect","BrowserRouter","Router","Route","Routes","Login","Register","Products","Ventas","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","Metamask","setMetamask","web3","setWeb3","balance","setbalance","accounts","setAccounts","balanceEth","setBalanceEth","conectarWallet","window","ethereum","request","method","web3Instance","localStorage","setItem","error","console","checkWalletConnection","isConnected","length","updateBalance","account","balanceWei","eth","getBalance","utils","fromWei","handleConnectWallet","getAccounts","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Accounts","Balance","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alero/OneDrive/Documentos/GitHub/proyecto/parte C/src/App.js"],"sourcesContent":["import Barra from \"./components/navbar/navbar\";\r\nimport Web3 from \"web3\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport Login from \"./components/Login/Login\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Products from \"./components/productos/productos\";\r\nimport Ventas from \"./components/ventas/Ventas\";\r\nimport Home from \"./components/Home/home\";\r\n\r\nfunction App() {\r\n  const [Metamask, setMetamask] = useState(false);\r\n  const [web3, setWeb3] = useState(null);\r\n  const [balance, setbalance] = useState(null);\r\n  const [accounts, setAccounts] = useState(null);\r\n  const [balanceEth, setBalanceEth] = useState(null);\r\n\r\n  // Function to connect the wallet\r\n  const conectarWallet = async () => {\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n        try {\r\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n          const web3Instance = new Web3(window.ethereum);\r\n          setWeb3(web3Instance);\r\n          setMetamask(true);\r\n          // Guardar la información de la cuenta en localStorage\r\n          localStorage.setItem(\"walletConnected\", \"true\");\r\n        } catch (error) {\r\n          console.error(\"No se pudo conectar a la wallet, error\");\r\n        }\r\n      } else {\r\n        setMetamask(false);\r\n      }}\r\n      useEffect(() => {\r\n        async function checkWalletConnection() {\r\n          if (typeof window.ethereum !== \"undefined\") {\r\n            const accounts = await window.ethereum.request({\r\n              method: \"eth_accounts\",\r\n            });\r\n            const isConnected = accounts.length > 0;\r\n    \r\n            if (isConnected) {\r\n              const web3Instance = new Web3(window.ethereum);\r\n              setWeb3(web3Instance);\r\n              setAccounts(accounts[0]); // Establecer la dirección de la cuenta\r\n              setMetamask(true);\r\n              updateBalance(web3Instance, accounts[0]); // Actualizar el balance\r\n            }\r\n          }\r\n        }\r\n    \r\n        checkWalletConnection();\r\n      }, []);\r\n    \r\n      const updateBalance = async (web3Instance, account) => {\r\n        const balanceWei = await web3Instance.eth.getBalance(account);\r\n        const balanceEth = web3Instance.utils.fromWei(balanceWei, \"ether\");\r\n        setBalanceEth(balanceEth);\r\n      };\r\n    \r\n      const handleConnectWallet = async () => {\r\n        if (!Metamask) {\r\n          try {\r\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n            const web3Instance = new Web3(window.ethereum);\r\n            const accounts = await web3Instance.eth.getAccounts();\r\n            setWeb3(web3Instance);\r\n            setAccounts(accounts[0]);\r\n            setMetamask(true);\r\n            updateBalance(web3Instance, accounts[0]);\r\n          } catch (error) {\r\n            console.error(\"No se pudo conectar a la wallet, error\");\r\n          }\r\n        } else {\r\n          // Desconectar la billetera\r\n          setMetamask(false);\r\n          setAccounts(null);\r\n          setBalanceEth(null);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Login />} />\r\n          <Route path=\"/productos\" element={<Products />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/ventas\" element={<Ventas/>}/>\r\n          <Route path=\"/wallet\" element={<Barra\r\n                    conectarWallet={handleConnectWallet}\r\n                    Accounts={accounts}\r\n                    Balance={balanceEth}\r\n                  ></Barra>}/>\r\n          <Route\r\n            path=\"/inicio\"\r\n            element={\r\n              Metamask ? (\r\n                <>\r\n                  <Home></Home>\r\n                </>\r\n              ) : (\r\n                <div className=\"text-center\">\r\n                  <h3 className=\"text-center\">\r\n                  Por favor instale una billetera o conecte su billetera perteneciente a su cuenta\r\n                </h3>\r\n                <button className=\"btn btn-light \" onClick={handleConnectWallet}>Conectar Wallet</button>\r\n                </div>\r\n                \r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
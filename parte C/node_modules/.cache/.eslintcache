[{"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\index.js":"1","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\App.js":"2","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\reportWebVitals.js":"3","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\Register\\Register.jsx":"4","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\ventas\\Ventas.jsx":"5","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\navbar\\navbar.jsx":"6","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\productos\\productos.jsx":"7","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\Home\\home.jsx":"8","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\Login\\Login.jsx":"9","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\ventas\\EthereumQRCode.js":"10"},{"size":552,"mtime":1695083793455,"results":"11","hashOfConfig":"12"},{"size":4950,"mtime":1697228969291,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1695083793455,"results":"14","hashOfConfig":"12"},{"size":6062,"mtime":1695083793449,"results":"15","hashOfConfig":"12"},{"size":13120,"mtime":1697229032808,"results":"16","hashOfConfig":"12"},{"size":10444,"mtime":1697051292218,"results":"17","hashOfConfig":"12"},{"size":12390,"mtime":1697226064788,"results":"18","hashOfConfig":"12"},{"size":9569,"mtime":1697051292172,"results":"19","hashOfConfig":"12"},{"size":4428,"mtime":1695011399689,"results":"20","hashOfConfig":"12"},{"size":298,"mtime":1696874129194,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"acdsrk",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\index.js",[],[],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\App.js",["55","56","57","58"],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\reportWebVitals.js",[],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\Register\\Register.jsx",["59"],[],"import React, { useState } from \"react\";\r\nimport \"./Register.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Register = () => {\r\n  const [nombre, setNombreusuario] = useState(\"\");\r\n  const [correo, setCorreo] = useState(\"\");\r\n  const [contrasenia, setPass] = useState(\"\");\r\n  const [codigo, setCod] = useState(\"\");\r\n  //const [imagen, setImg] = useState(\"\");\r\n  const [confirmContrasenia, setConfirmContrasenia] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const agregarusuario = () => {\r\n    // Verificar si al menos uno de los campos obligatorios contiene datos\r\n    if (!nombre || !correo || !contrasenia || !codigo) {\r\n      setError(\"Todos los campos son obligatorios\");\r\n      return; // Detener la función si algún campo está vacío\r\n    }\r\n\r\n    if (contrasenia === confirmContrasenia) {\r\n      Axios.post(\"http://localhost:3001/create2\", {\r\n        nombre: nombre,\r\n        correo: correo,\r\n        contrasenia_hash: contrasenia,\r\n        codigo: codigo,\r\n      }).then(() => {\r\n        limpiarCampos();\r\n\r\n        MySwal.fire({\r\n          title: <strong>Registro Exitoso!!!</strong>,\r\n          html: <i>El usuario \"{nombre}\" fue registrado con éxito!</i>,\r\n          icon: \"success\",\r\n        });\r\n      });\r\n    } else {\r\n      setError(\"Las contraseñas no coinciden\");\r\n    }\r\n  };\r\n\r\n  const limpiarCampos = () => {\r\n    setNombreusuario(\"\");\r\n    setCorreo(\"\");\r\n    setPass(\"\");\r\n    setCod(\"\");\r\n    setConfirmContrasenia(\"\");\r\n    //setImg(\"\")\r\n  };\r\n\r\n  function handleImageChange(event) {\r\n    const profilePicture = document.getElementById(\"profile-picture\");\r\n    const selectedImage = event.target.files[0];\r\n\r\n    if (selectedImage) {\r\n      const imageURL = URL.createObjectURL(selectedImage);\r\n      profilePicture.src = imageURL;\r\n    } else {\r\n      profilePicture.src = \"../img/user.png\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"background-register\" style={{background:\"#212529\"}}>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <div className=\"container-md w-auto\">\r\n          <div\r\n            className=\"text-center border border-light p-4 bg-black text-white\"\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow: \"10px 8px 30px 0px black\",\r\n            }}\r\n          >\r\n            <form id=\"registro-form\">\r\n              <img\r\n                style={{ width: \"80px\" }}\r\n                id=\"profile-picture\"\r\n                src=\"../img/user.png\"\r\n                alt=\"Profile picture\"\r\n              />\r\n              <br />\r\n              <input\r\n                className=\"mb-2 mt-2\"\r\n                style={{ backgroundColor: \"rgb(118, 118, 118)\" }}\r\n                type=\"file\"\r\n                name=\"imagen\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageChange}\r\n              />\r\n              <br />\r\n              <label htmlFor=\"user\" className=\"form-label\">\r\n                Nombre de usuario:\r\n              </label>\r\n              <input\r\n                id=\"user\"\r\n                className=\"form-control form-control-sm mb-3\"\r\n                required\r\n                value={nombre}\r\n                onChange={(event) => {\r\n                  setNombreusuario(event.target.value);\r\n                }}\r\n                type=\"text\"\r\n              />\r\n\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Correo electrónico:\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                className=\"form-control form-control-sm mb-3\"\r\n                required\r\n                value={correo}\r\n                onChange={(event) => {\r\n                  setCorreo(event.target.value);\r\n                }}\r\n              />\r\n\r\n              <label htmlFor=\"contra\" className=\"form-label\">\r\n                Contraseña:\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"contra\"\r\n                className=\"form-control form-control-sm mb-3\"\r\n                required\r\n                value={contrasenia}\r\n                onChange={(event) => {\r\n                  setPass(event.target.value);\r\n                }}\r\n              />\r\n\r\n              <label htmlFor=\"confirm-contra\" className=\"form-label\">\r\n                Confirmar contraseña:\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirm-contra\"\r\n                className=\"form-control form-control-sm mb-3\"\r\n                required\r\n                value={confirmContrasenia}\r\n                onChange={(event) => {\r\n                  setConfirmContrasenia(event.target.value);\r\n                }}\r\n              />\r\n\r\n              {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n              <label htmlFor=\"cod\" className=\"form-label\">\r\n                Ingresar Codigo de 6 digitos:\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"cod\"\r\n                className=\"form-control form-control-sm mb-3\"\r\n                required\r\n                value={codigo}\r\n                onChange={(event) => {\r\n                  setCod(event.target.value);\r\n                }}\r\n              />\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light btn-block btn-sm\"\r\n                onClick={agregarusuario}\r\n              >\r\n                Registrarse\r\n              </button>\r\n            </form>\r\n            <br />\r\n            <p className=\"fst-italic\">\r\n              Con cuenta{\" \"}\r\n              <Link to=\"/\" className=\"link-light\">\r\n                Iniciar sesión\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\ventas\\Ventas.jsx",["60"],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\navbar\\navbar.jsx",["61","62","63","64","65","66","67","68","69","70"],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\productos\\productos.jsx",["71","72","73","74","75","76","77","78","79"],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\Home\\home.jsx",["80","81","82","83","84","85","86","87","88","89"],[],"C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\Login\\Login.jsx",["90","91"],[],"import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport blockchain from \"../Home/Img/blockChain.png\"\n\nconst Login = () => {\n  const [correo, setCorreo] = useState(\"\");\n  const [contrasenia_hash, setContrasenia] = useState(\"\");\n  const [codigo, setCodigo] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Función que se ejecuta al enviar el formulario de inicio de sesión\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Realizamos una solicitud POST al servidor local en el puerto 3001 para iniciar sesión\n      const response = await fetch(\"http://localhost:3001/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\", // Establecemos el tipo de contenido como JSON\n        },\n        body: JSON.stringify({ correo, contrasenia_hash, codigo }), // Enviamos el email, contraseña y el código de 6 dígitos como datos JSON\n      });\n\n      // Si la respuesta del servidor es exitosa (código de estado 200), redirigimos a la página de inicio\n      if (response.ok) {\n        console.log(\"Inicio de sesión exitoso\");\n        navigate(\"/inicio\");\n      } else {\n        // Si la respuesta es un error, mostramos el mensaje de error recibido del servidor\n        const data = await response.json();\n        setError(data.message);\n      }\n    } catch (error) {\n      // Manejamos cualquier error que ocurra durante la solicitud\n      console.error(\"Error al realizar la solicitud:\", error);\n    }\n  };\n\n  return (\n    <div className=\"background-login\" style={{background:\"#212529\"}}>\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"100vh\" }}\n        data-bs-theme=\"dark\"\n      >\n        <div className=\"container-md w-auto\" data-bs-theme=\"dark\">\n          <div\n            className=\"text-center border border-light p-4 bg-black text-white\"\n            style={{\n              borderRadius: \"15px\",\n              boxShadow: \"10px 8px 30px 0px black\",\n            }}\n            data-bs-theme=\"dark\"\n          >\n            <form\n              action=\"auth\"\n              method=\"POST\"\n              className=\"\"\n              data-bs-theme=\"dark\"\n              onSubmit={handleSubmit}\n            >\n              <img\n                style={{ width: \"80px\" }}\n                id=\"profile-picture\"\n                src=\"./img/user.png\"\n                alt=\"Profile picture\"\n              />\n              <br />\n\n              <label htmlFor=\"email\" className=\"form-label\">\n                Correo electrónico:\n              </label>\n              <input\n                type=\"email\"\n                id=\"correo\"\n                className=\"form-control form-control-sm mb-3\"\n                required\n                value={correo}\n                onChange={(e) => setCorreo(e.target.value)}\n              />\n              <label htmlFor=\"contra\" className=\"form-label\">\n                Contraseña:\n              </label>\n              <input\n                type=\"password\"\n                id=\"contra\"\n                className=\"form-control form-control-sm mb-3\"\n                required\n                value={contrasenia_hash}\n                onChange={(e) => setContrasenia(e.target.value)}\n              />\n              <label htmlFor=\"cod\" className=\"form-label\">\n                Codigo de 6 dígitos:\n              </label>\n              <input\n                type=\"text\"\n                id=\"cod\"\n                className=\"form-control form-control-sm mb-3\"\n                required\n                value={codigo}\n                onChange={(e) => setCodigo(e.target.value)}\n              />\n              {error && <p className=\"text-danger\">{error}</p>}\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-light btn-block btn-sm\"\n              >\n                Iniciar sesión\n              </button>\n            </form>\n            <br />\n            <p className=\"fst-italic\">\n              Sin cuenta{\" \"}\n              <Link to=\"/Register\" className=\"link-light\">\n                Regístrese\n              </Link>\n            </p>\n            \n          </div>\n            \n        </div>\n        <img src={blockchain} alt=\"\" /> \n      </div>\n      \n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\alero\\OneDrive\\Documentos\\GitHub\\proyecto\\parte C\\src\\components\\ventas\\EthereumQRCode.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":14,"column":10,"nodeType":"94","messageId":"95","endLine":14,"endColumn":14},{"ruleId":"92","severity":1,"message":"96","line":15,"column":10,"nodeType":"94","messageId":"95","endLine":15,"endColumn":17},{"ruleId":"92","severity":1,"message":"97","line":15,"column":19,"nodeType":"94","messageId":"95","endLine":15,"endColumn":29},{"ruleId":"92","severity":1,"message":"98","line":20,"column":9,"nodeType":"94","messageId":"95","endLine":20,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":82,"column":15,"nodeType":"101","endLine":87,"endColumn":17},{"ruleId":"92","severity":1,"message":"102","line":198,"column":15,"nodeType":"94","messageId":"95","endLine":198,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":48,"column":15,"nodeType":"101","endLine":52,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":56,"column":15,"nodeType":"101","endLine":59,"endColumn":43},{"ruleId":"103","severity":1,"message":"104","line":64,"column":15,"nodeType":"101","endLine":68,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":74,"column":15,"nodeType":"101","endLine":78,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":102,"column":19,"nodeType":"101","endLine":102,"endColumn":84},{"ruleId":"103","severity":1,"message":"104","line":108,"column":19,"nodeType":"101","endLine":108,"endColumn":64},{"ruleId":"103","severity":1,"message":"104","line":113,"column":19,"nodeType":"101","endLine":113,"endColumn":64},{"ruleId":"103","severity":1,"message":"104","line":118,"column":19,"nodeType":"101","endLine":124,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":129,"column":23,"nodeType":"101","endLine":129,"endColumn":106},{"ruleId":"103","severity":1,"message":"104","line":134,"column":23,"nodeType":"101","endLine":134,"endColumn":57},{"ruleId":"103","severity":1,"message":"104","line":153,"column":15,"nodeType":"101","endLine":157,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":161,"column":15,"nodeType":"101","endLine":164,"endColumn":43},{"ruleId":"103","severity":1,"message":"104","line":169,"column":15,"nodeType":"101","endLine":173,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":179,"column":15,"nodeType":"101","endLine":183,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":303,"column":35,"nodeType":"101","endLine":303,"endColumn":65},{"ruleId":"103","severity":1,"message":"104","line":304,"column":35,"nodeType":"101","endLine":304,"endColumn":65},{"ruleId":"103","severity":1,"message":"104","line":305,"column":35,"nodeType":"101","endLine":305,"endColumn":65},{"ruleId":"103","severity":1,"message":"104","line":306,"column":35,"nodeType":"101","endLine":306,"endColumn":65},{"ruleId":"103","severity":1,"message":"104","line":307,"column":35,"nodeType":"101","endLine":307,"endColumn":65},{"ruleId":"103","severity":1,"message":"104","line":49,"column":29,"nodeType":"101","endLine":53,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":58,"column":29,"nodeType":"101","endLine":61,"endColumn":59},{"ruleId":"103","severity":1,"message":"104","line":66,"column":29,"nodeType":"101","endLine":70,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":76,"column":29,"nodeType":"101","endLine":80,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":104,"column":37,"nodeType":"101","endLine":104,"endColumn":102},{"ruleId":"103","severity":1,"message":"104","line":110,"column":37,"nodeType":"101","endLine":110,"endColumn":82},{"ruleId":"103","severity":1,"message":"104","line":115,"column":37,"nodeType":"101","endLine":115,"endColumn":82},{"ruleId":"103","severity":1,"message":"104","line":120,"column":37,"nodeType":"101","endLine":126,"endColumn":38},{"ruleId":"103","severity":1,"message":"104","line":131,"column":45,"nodeType":"101","endLine":131,"endColumn":128},{"ruleId":"103","severity":1,"message":"104","line":136,"column":45,"nodeType":"101","endLine":136,"endColumn":79},{"ruleId":"92","severity":1,"message":"105","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":66,"column":15,"nodeType":"101","endLine":71,"endColumn":17},"no-unused-vars","'web3' is assigned a value but never used.","Identifier","unusedVar","'balance' is assigned a value but never used.","'setbalance' is assigned a value but never used.","'conectarWallet' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'approve' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Axios' is defined but never used."]